Accept :
 
The accept attribute takes as its value a comma-separated list of one or more file types,
or unique file type specifiers, describing which file types to allow.

Example : 

<label for="Poster">Poster</label>
<input type="file" name="Poster" accept = "image/*,Video/*,Audio/*">
<input type="file" name="Poster" accept="jpg, .jpeg, .png">   


// ' * ' Represents to select all type of extensions or properties of file.

i. This Attribute can be used to specify Multiple file type in attribute.

ii. The accept attribute doesn't validate the types of the selected files;
it provides hints for browsers to guide users towards selecting the correct file types

AutoComplete : 

The HTML autocomplete attribute lets web developers specify what if any permission the user agent has to provide automated assistance in filling out form field values,
as well as guidance to the browser as to the type of information expected in the field.

It is available on <input> elements that take a text or numeric value as input, <textarea> elements, <select> elements,
and <form> elements.

<textarea autocomplete="on"></textarea>
<input autocomplete="new-password" >

Cross-Origin  : 

The crossorigin attribute, valid on the <audio>, <img>, <link>, <script>, and <video> elements, provides support for CORS, defining how the element handles cross-origin requests,
thereby enabling the configuration of the CORS requests for the element's fetched data.Depending on the element, the attribute can be a CORS settings attribute.


You can use the following <script> element to tell a browser to execute the https://example.com/example-framework.js script without sending user-credentials.

<script src="https://example.com/example-framework.js" crossorigin="anonymous"></script>

The use-credentials value must be used when fetching a manifest that requires credentials, even if the file is from the same origin.

<link rel="manifest" href="/app.webmanifest" crossorigin="use-credentials" />

